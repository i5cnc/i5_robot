<launch>

<!-- This launch file provides a socket-based connection to industrial robots
     that implement the standard ROS Industrial simple_message protocol.
     *** Motion control is implemented by STREAMING path data to the robot ***
         (for DOWNLOAD-based path-control, use a different launch file)

     Several nodes are started, to supply both low-level robot communication
     and higher-level actionlib support:
       - robot_state : publishes current joint positions and robot state data
       - motion_streaming_interface : command robot motion by sending motion points to robot
       - joint_trajectory_action : actionlib interface to control robot motion
       - io_service : service to read && write single io.
       - system_service : service to send some application command(enable, disable switch mode to playback or jog and etc.). 

  Usage:
    robot_interface_streaming.launch robot_ip:=<value>
-->



	<!-- robot_ip: IP-address of the robot's socket-messaging server -->
	<arg name="robot_ip" />
	<arg name="use_pt_full" default="true"/>


	<!-- copy the specified parameters to the Parameter Server, for 
	     use by nodes below -->
	<param name="robot_ip_address" type="str" value="$(arg robot_ip)" />

	<!-- robot_state: publishes joint positions and robot-state data
	     (from socket connection to robot)
	-->
	<include file="$(find i5_driver)/launch/robot_state.launch">
		<arg name="robot_ip"   value="$(arg robot_ip)" />
	</include>

	<!-- motion_streaming_interface: sends robot motion commands by 
	     STREAMING path to robot (using socket connection to robot) 
	-->
	<include file="$(find i5_driver)/launch/motion_streaming_interface.launch">
		<arg name="robot_ip"   value="$(arg robot_ip)" />
		<arg name="use_pt_full"   value="$(arg use_pt_full)" />
	</include>
	
	<!-- io_service: read and write io
		(from socket connection to robot) 
	-->
	<include file="$(find i5_driver)/launch/io_service.launch">
		<arg name="robot_ip"   value="$(arg robot_ip)" />
	</include>
	
	<!-- system_service: send application command
		(from socket connection to robot) 
	-->
	<include file="$(find i5_driver)/launch/system_service.launch">
		<arg name="robot_ip"   value="$(arg robot_ip)" />
	</include>
</launch>
